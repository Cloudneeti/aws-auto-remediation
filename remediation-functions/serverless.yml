#Copyright (c) Cloudneeti. All rights reserved.
#Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is  furnished to do so, subject to the following conditions:
#The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

service: zcspm-rem-functions

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:accounthash}
  region: ${opt:region, 'us-east-1'}
  remediationversion: ${opt:remediationversion, '2.1'}
  memorySize: 3008
  versionFunctions: false
  deploymentBucket:
    name: zcspm-rem-${self:provider.stage}

functions:   
  orchestrator:
    handler: orchestrator.lambda_handler
    name: zcspm-aws-remediate-orchestrator
    timeout: 900
    role: ZCSPMLambdaRole
    events:
      - cloudwatchEvent:
          name: 'zcspm-aws-asg-event-rule'
          description: 'CloudWatch Event triggered on asg'
          event:
            source:
              - aws.autoscaling
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - autoscaling.amazonaws.com
              eventName:
                - UpdateAutoScalingGroup
                - CreateAutoScalingGroup
      - cloudwatchEvent:
          name: 'zcspm-aws-cloudformation-event-rule'
          description: 'CloudWatch Event triggered on cloudformation stack'
          event:
            source:
              - aws.cloudformation
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - cloudformation.amazonaws.com
              eventName:
                - CreateStack
                - UpdateTerminationProtection
      - cloudwatchEvent:
          name: 'zcspm-aws-cloudtrail-event-rule'
          description: 'CloudWatch Event triggered on cloudtrail'
          event:
            source:
              - aws.cloudtrail
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - cloudtrail.amazonaws.com
              eventName:
                - CreateTrail
                - UpdateTrail
                - StopLogging
      - cloudwatchEvent:
          name: 'zcspm-aws-dynamodb-event-rule'
          description: 'CloudWatch Event triggered on dynamodb'
          event:
            source:
              - aws.dynamodb
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - dynamodb.amazonaws.com
              eventName:
                - CreateTable
                - RestoreTableFromBackup
                - UpdateTable
                - UpdateContinuousBackups
      - cloudwatchEvent:
          name: 'zcspm-aws-ec2-event-rule'
          description: 'CloudWatch Event triggered on ec2'
          event:
            source:
              - aws.ec2
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - ec2.amazonaws.com
              eventName:
                - RunInstances
                - StartInstances
                - ModifyInstanceAttribute
                - UnmonitorInstances
      - cloudwatchEvent:
          name: 'zcspm-aws-elb-event-rule'
          description: 'CloudWatch Event triggered on elb'
          event:
            source:
              - aws.elasticloadbalancing
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - elasticloadbalancing.amazonaws.com
              eventName:
                - CreateLoadBalancer
                - ModifyLoadBalancerAttributes
      - cloudwatchEvent:
          name: 'zcspm-aws-iam-event-rule'
          description: 'CloudWatch Event triggered on iam'
          event:
            source:
              - aws.iam
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - iam.amazonaws.com
              eventName:
                - UpdateAccountPasswordPolicy
                - DeleteAccountPasswordPolicy
      - cloudwatchEvent:
          name: 'zcspm-aws-kinesis-event-rule'
          description: 'CloudWatch Event triggered on kinesis'
          event:
            source:
              - aws.kinesis
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - kinesis.amazonaws.com
              eventName:
                - CreateStream
                - StopStreamEncryption
                - DisableEnhancedMonitoring
      - cloudwatchEvent:
          name: 'zcspm-aws-kms-event-rule'
          description: 'CloudWatch Event triggered on kms'
          event:
            source:
              - aws.kms
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - kms.amazonaws.com
              eventName:
                - CreateKey
                - DisableKeyRotation
      - cloudwatchEvent:
          name: 'zcspm-aws-rds-event-rule'
          description: 'CloudWatch Event triggered on rds/neptune/docdb'
          event:
            source:
              - aws.rds
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - rds.amazonaws.com
              eventName:
                - CreateDBCluster
                - ModifyDBCluster
                - CreateDBInstance
                - ModifyDBInstance
                - ModifyDBClusterSnapshotAttribute
                - ModifyDBSnapshotAttribute
                - ModifyDBParameterGroup
      - cloudwatchEvent:
          name: 'zcspm-aws-redshift-event-rule'
          description: 'CloudWatch Event triggered on redshift cluster'
          event:
            source:
              - aws.redshift
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - redshift.amazonaws.com
              eventName:
                - CreateCluster
                - ModifyCluster
      - cloudwatchEvent:
          name: 'zcspm-aws-s3bucket-event-rule'
          description: 'CloudWatch Event triggered on s3bucket'
          event:
            source:
              - aws.s3
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - s3.amazonaws.com
              eventName:
                - CreateBucket
                - PutBucketVersioning
                - DeleteBucketEncryption
                - PutBucketAcl
                - PutAccelerateConfiguration
                - PutBucketPublicAccessBlock
                - PutBucketLogging
      - cloudwatchEvent:
          name: 'zcspm-aws-sqs-event-rule'
          description: 'CloudWatch Event triggered on sqs queue'
          event:
            source:
              - aws.sqs
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - sqs.amazonaws.com
              eventName:
                - CreateQueue
                - SetQueueAttributes
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  cloudtrail:
    handler: cloudtrail/cloudtrail_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-cloudtrail
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  elb:
    handler: elb/elb_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-elb
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  elbv2:
    handler: elbv2/elbv2_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-elbv2
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  iam:
    handler: iam/iam_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-iam
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  kinesis:
    handler: kinesis/kinesis_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-kinesis
    timeout: 900
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  kms:
    handler: kms/kms_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-kms
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  rds_cluster:
    handler: rds_cluster/rdscluster_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-rdscluster
    timeout: 900
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  rds_instance:
    handler: rds_instance/rdsinstance_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-rdsinstance
    timeout: 900
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  redshift:
    handler: redshift/redshift_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-redshift
    timeout: 900
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  s3:
    handler: s3/s3_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-s3-bucket
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:remediationversion}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  neptune_cluster:
    handler: neptune_cluster/neptunecluster_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-neptune-cluster
    timeout: 900
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  neptune_instance:
    handler: neptune_instance/neptuneinstance_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-neptune-instance
    timeout: 900
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  ec2:
    handler: ec2/ec2instance_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-ec2-instance
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}
  
  dynamodb:
    handler: dynamodb/dynamodb_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-dynamodb
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}
  
  asg:
    handler: asg/asg_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-asg
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}
  
  cloudformation:
    handler: cloudformation/cloudformation_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-cloudformation
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}
  
  sqs:
    handler: sqs/sqs_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-sqs
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}
  
  rds_snapshots:
    handler: rds_snapshots/rdssnapshot_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-rdssnapshot
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}
  
  docdb_instance:
    handler: docdb_instance/docdbinstance_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-documentdb-instance
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}
  
  docdb_cluster:
    handler: docdb_cluster/docdbcluster_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-documentdb-cluster
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}

  fsx_windows:
    handler: fsx_windows/fsx_windows_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-fsx-windows
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}
  
  kinesis_firehose:
    handler: kinesis_firehose/kinesis_firehose_suborchestrator.lambda_handler
    name: zcspm-aws-remediate-kinesis-firehose
    timeout: 300
    role: ZCSPMLambdaRole
    tags:
      ServiceName: auto-remediation-lambda
      Version: ${opt:version, '1.0'}
      Description: ZCSPM automatic remediation solution for making cloud resource compliant
      Environment: ${opt:env, 'zcspm-remediation'}
    
resources:
  Resources:
    ZCSPMCloudTrail:
      Type: AWS::CloudTrail::Trail
      Properties: 
        CloudWatchLogsLogGroupArn: "arn:aws:logs:${self:provider.region}:${opt:aws-account-id}:log-group:zcspm-log-group:*"
        CloudWatchLogsRoleArn: "arn:aws:iam::${opt:aws-account-id}:role/ZCSPM-CloudwatchRole"
        IncludeGlobalServiceEvents: true
        IsLogging: true
        IsMultiRegionTrail: true
        S3BucketName: zcspm-rem-${self:provider.stage}
        S3KeyPrefix: zcspm-ctlogs
        TrailName: zcspm-remediation-trail
        Tags: 
          -
            Key: "ServiceName"
            Value: "auto-remediation-trail"
          -
            Key: "Version"
            Value: "${opt:remediationversion}"
          -
            Key: "Description"
            Value: "ZCSPM automatic remediation solution for making cloud resource compliant"
          -
            Key: "Environment"
            Value: "${opt:env, 'zcspm-remediation'}"
    ZCSPMRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ZCSPM-Auto-Remediation-Role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS:
                  - "arn:aws:iam::${opt:aws-account-id}:root" 
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - "arn:aws:iam::aws:policy/SecurityAudit"
        Policies:
        - PolicyName: zcspm-lambda-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: AllowIAMForLambdaPolicy
              Effect: Allow
              Action:
              - lambda:InvokeFunction
              - autoscaling:UpdateAutoScalingGroup
              - cloudformation:UpdateTerminationProtection
              - cloudtrail:StartLogging
              - cloudtrail:UpdateTrail
              - dynamodb:UpdateContinuousBackups
              - ec2:MonitorInstances
              - ec2:ModifyInstanceAttribute
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - iam:UpdateAccountPasswordPolicy
              - iam:PassRole
              - kinesis:StartStreamEncryption
              - kinesis:EnableEnhancedMonitoring
              - kms:EnableKeyRotation
              - rds:ModifyDBCluster
              - rds:ModifyDBInstance
              - rds:ModifyDBParameterGroup
              - rds:ModifyDBClusterSnapshotAttribute
              - rds:ModifyDBSnapshotAttribute
              - redshift:ModifyCluster
              - s3:PutBucketVersioning
              - s3:PutEncryptionConfiguration
              - s3:PutBucketAcl
              - s3:PutAccelerateConfiguration
              - s3:PutBucketPublicAccessBlock
              - s3:PutBucketLogging
              - sqs:CreateQueue
              - sqs:SetQueueAttributes
              Resource: "*"
    ZCSPMOrchestratorRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ZCSPM-Remediation-Invocation-Role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS:
                  - "arn:aws:iam::${opt:zcspm-aws-account-id}:root"  # Add the ZCSPM AWS Account ID
                  - "arn:aws:iam::${opt:aws-account-id}:role/ZCSPM-Auto-Remediation-Invoker"
              Action: sts:AssumeRole
        Policies:
          - PolicyName: zcspm-lambda-policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Sid: InvokeLambdaPolicy
                Effect: Allow
                Action:
                - lambda:InvokeFunction
                - lambda:GetFunction
                Resource: "*"
    ZCSPMLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ZCSPM-OrchesLambdaRole-${opt:env, 'zcspm-remediation'}
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: zcspm-lambda-policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Sid: AllowIAMForLambdaPolicy
                Effect: Allow
                Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - cloudtrail:DescribeTrails
                - cloudtrail:GetTrailStatus
                - s3:ListAllMyBuckets
                - s3:GetObject
                - s3:PutObject
                - s3:GetBucketVersioning
                - lambda:InvokeFunction
                Resource: "*"
              - Sid: AllowAssumeRoleForLambdaPolicy
                Effect: Allow
                Action:
                - sts:AssumeRole
                Resource: 
                - "arn:aws:iam::*:role/ZCSPM-Auto-Remediation-Role"