#Copyright (c) Cloudneeti. All rights reserved.
#Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is  furnished to do so, subject to the following conditions:
#The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: dev
  awsaccountid:
    Description: AWS Account ID
    Type: String
  region:
    Description: Region of deployment
    Type: String
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
        BucketName:
          Fn::Join:
          - ""
          - - !Ref Stack
        BucketEncryption:
            ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: AES256
        LifecycleConfiguration:
            Rules:
            - Id: Delete-ct-logs
              Prefix: zcspm-ctlogs/
              Status: Enabled
              ExpirationInDays: 2
              NoncurrentVersionExpirationInDays: 1
            - Id: Transition-policyconfig
              Prefix: policy_config/
              Status: Enabled
              ExpirationInDays: 365
              NoncurrentVersionExpirationInDays: 60
        VersioningConfiguration:
            Status: Enabled
        PublicAccessBlockConfiguration:
            BlockPublicAcls: True
            BlockPublicPolicy: True
            IgnorePublicAcls: True
            RestrictPublicBuckets: True
        ObjectLockEnabled: True
        Tags: 
          -
            Key: "ServiceName"
            Value: "auto-remediation-deployment-bucket"
          -
            Key: "Description"
            Value: "ZCSPM automatic remediation solution for making cloud resource compliant"
  CTBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: S3Bucket
    Properties: 
      Bucket:
        Fn::Join:
        - ""
        - - !Ref Stack
      PolicyDocument:
        Statement:
          - Sid: CTBucketPolicy1
            Action:
              - "s3:GetBucketAcl"
            Effect: "Allow"
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Resource:
              Fn::Join:
              - ""
              - - 'arn:aws:s3:::'
                - !Ref Stack
          - Sid: CTBucketPolicy2
            Action:
              - "s3:PutObject"
            Effect: "Allow"
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Resource:
              Fn::Join:
              - ""
              - - 'arn:aws:s3:::'
                - !Ref Stack
                - '/zcspm-ctlogs/AWSLogs/'
                - !Ref awsaccountid
                - '/*'
            Condition:
              StringLike: 
                s3:x-amz-acl: 
                  - "bucket-owner-full-control"
  ZCSPMLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: zcspm-log-group
  ZCSPMCloudwatchRole: 
    Type: AWS::IAM::Role
    DependsOn: ZCSPMLogGroup 
    Properties:
      RoleName: ZCSPM-CloudwatchRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: zcspm-cloudwatch-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: CTCWPolicy1
              Effect: Allow
              Action:
              - "logs:CreateLogStream"
              Resource: 
                Fn::Join:
                - ""
                - - 'arn:aws:logs:'
                  - !Ref region
                  - ':'
                  - !Ref awsaccountid
                  - ':log-group:zcspm-log-group:*'
            - Sid: CTCWPolicy2
              Effect: Allow
              Action:
              - "logs:PutLogEvents"
              Resource: 
                Fn::Join:
                - ""
                - - 'arn:aws:logs:'
                  - !Ref region
                  - ':'
                  - !Ref awsaccountid
                  - ':log-group:zcspm-log-group:*'
  ZCSPMLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ZCSPM-AutoRem-InvokerFunction-Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: zcspm-lambda-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: AllowIAMForLambdaPolicy
              Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - cloudtrail:DescribeTrails
              - cloudtrail:GetTrailStatus
              - iam:Get*
              - iam:List*
              Resource: "*"
            - Sid: AllowAssumeRoleForLambdaPolicy
              Effect: Allow
              Action:
              - sts:AssumeRole
              Resource: 
              - "arn:aws:iam::*:role/ZCSPM-Remediation-Invocation-Role"